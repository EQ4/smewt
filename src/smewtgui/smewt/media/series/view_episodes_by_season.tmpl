#set eps = $episodes

<%
from itertools import groupby
from collections import defaultdict
from smewt import SmewtUrl, Media, Graph
from smewt.media import Episode, Series

import os, os.path
# FIXME: this is not the correct way to do it...
import_dir = os.path.join(os.getcwd(), 'smewt', 'media', 'series')

seasons = defaultdict(lambda: [])

series = eps.findAll(Series)[0]
seriesName = series['title']
poster = series['loresImage']
englishSubsLink = SmewtUrl('action', 'getsubtitles', { 'title': seriesName, 'language': 'en' })
frenchSubsLink = SmewtUrl('action', 'getsubtitles', { 'title': seriesName, 'language': 'fr' })
spanishSubsLink = SmewtUrl('action', 'getsubtitles', { 'title': seriesName, 'language': 'es' })

# First prepare the episodes
episodes = {}

# HACK: we should really have a good schema so that I could do 
# episode.media.filename becuase currently I sort the medias by
# type so that we first process the videos and then the subtitles 
for media in eps.findAll(Media):
    meta = media.metadata.toDict()
    md = episodes.setdefault( (meta['season'], meta['episodeNumber']), defaultdict(lambda:None)  )
    md.update( meta )
    md.setdefault('subtitleUrls', [])
        
    if media.type() == 'video':       
        md['filename'] = media.filename
        md['url'] = SmewtUrl('action', 'play', { 'filename1': media.filename })
        
    elif media.type() == 'subtitle':
        langs = [lang.lower() for lang in media.filename.split('.')]
        
        lang = 'unknown'
        if len(langs) >= 3 and len(langs[-2]) == 2:
           lang = langs[-2]
        
        md.setdefault('subtitleUrls', []).append( {'languageImage': import_dir + '/icons/png/%s.png' % (lang,),
                         'url': SmewtUrl('action', 'play', { 'filename1': os.path.splitext(os.path.splitext(media.filename)[0])[0] + '.avi', 'subtitle': media.filename })} )

        md['numSubtitles'] = len(md['subtitleUrls'])
        
for md in episodes.values():
    md['subtitleUrls'].sort(key = lambda x: x['languageImage'])
    seasons[ md['season'] ].append( md )    

for season, eps in seasons.items():
    seasons[ season ] = sorted(eps, key = lambda x: x['episodeNumber'])
%>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
<title>single serie display</title>
<script type="text/javascript" src="file://$(import_dir)/tabber.js"></script>
<script type="text/javascript" src="file://$(import_dir)/styler.js"></script>
<link rel="stylesheet" href="file://$(import_dir)/series.css" type="text/css">
</head>

<body>

<img src="file://$poster" />

<div class="rightshifted">
  <h1>$seriesName</h1>

  <a href="$englishSubsLink">Get missing English subtitles</a>
  <a href="$frenchSubsLink">Get missing French subtitles</a>
  <a href="$spanishSubsLink">Get missing Spanish subtitles</a>
  <a href="javascript:toggleByName('synopsis')">Toggle synopsis</a>
</div>

<div class="tabber">
#for seasonNumber, eps in seasons.items():
  <div class="tabbertab">
  <h2>Season $seasonNumber</h2>
  <p>
  #for ep in [ ep for ep in eps if 'title' in ep ]
    #if 'filename' in ep:
      #try
        <div class="episode"><a href="$ep.url">$ep.episodeNumber - $ep.title </a>
      #except
        <div class="episode"> ? - $ep.title
      #end try

      #if 'subtitleUrls' in ep
          #for s in ep['subtitleUrls']
               <a href="$s.url"><img src="file://$s.languageImage" /></a>
          #end for
      #end if
          
      #if 'synopsis' in ep:
        <div name="synopsis" style="display:none"><p>$ep.synopsis</p></div>
      #end if
      </div>
    #end if
  #end for

<%
import os.path
extras = [ ep for ep in eps if 'title' not in ep ]
for ep in extras:
    ep['title'] = os.path.basename(ep['filename'])
%>

  #if extras
    <div class="extras">Extras / Untitled / Metadata unknown</div>
  #end if
  #for ep in extras
    <div class="episode"><a href="$ep.url"><i>$ep.title</i></a></div>
  #end for
  </p></div>
#end for

</body>
</html>
